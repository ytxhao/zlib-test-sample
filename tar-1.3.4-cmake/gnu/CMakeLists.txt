cmake_minimum_required(VERSION 3.16)

set(CMAKE_MACOSX_RPATH 0)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_VERBOSE_MAKEFILE ON)

#add_definitions(-DHAVE_CONFIG_H)

include_directories("${CMAKE_CURRENT_SOURCE_DIR}")
include_directories("${CMAKE_CURRENT_SOURCE_DIR}/..")
#include_directories("${CMAKE_CURRENT_SOURCE_DIR}/../gnu")
message("-------------------- ${CMAKE_CURRENT_SOURCE_DIR}")
set(SOURCE_GNU_LIB_FILES
        acl-errno-valid.c
        acl-internal.c
        get-permissions.c
        set-permissions.c
        allocator.c
        areadlink.c
        areadlink-with-size.c
        areadlinkat.c
        areadlinkat-with-size.c
        argmatch.c
        argp-ba.c
        argp-eexst.c
        argp-fmtstream.c
        argp-fs-xinl.c
        argp-help.c
        argp-parse.c
        argp-pin.c
        argp-pv.c
        argp-pvh.c
        argp-xinl.c
        argp-version-etc.c
        openat-proc.c
        backupfile.c
        backup-find.c
        basename-lgpl.c
        bitrotate.c
        c-ctype.c
        c-strcasecmp.c
        c-strncasecmp.c
        careadlinkat.c
        cloexec.c
        close-stream.c
        closeout.c
        opendir-safer.c
        dirname.c
        basename.c
        dirname-lgpl.c
        stripslash.c
        exclude.c
        exitfail.c
        creat-safer.c
        open-safer.c
        fd-hook.c
        fd-safer-flag.c
        dup-safer-flag.c
        fdutimensat.c
        file-has-acl.c
        filenamecat-lgpl.c
        fprintftime.c
        full-write.c
        getprogname.c
        gettime.c
        hard-locale.c
        hash.c
        human.c
        imaxtostr.c
        inttostr.c
        offtostr.c
        uinttostr.c
        umaxtostr.c
        localcharset.c
        malloca.c
        mbchar.c
        mbscasecmp.c
        mbuiter.c
        modechange.c
        nstrftime.c
        openat-die.c
        openat-safer.c
        opendirat.c
        parse-datetime.c
        priv-set.c
        progname.c
        quotearg.c
        renameatu.c
        safe-read.c
        safe-write.c
        save-cwd.c
        savedir.c
        malloc/scratch_buffer_dupfree.c
        malloc/scratch_buffer_grow.c
        malloc/scratch_buffer_grow_preserve.c
        malloc/scratch_buffer_set_array_size.c
        selinux-at.c
        se-context.c
        se-label.c
        se-selinux.c
        setlocale_null.c
        stat-time.c
        statat.c
        stdopen.c
        strnlen1.c
        tempname.c
        timespec.c
        timespec-sub.c
        unistd.c
        dup-safer.c
        fd-safer.c
        pipe-safer.c
        uniwidth/width.c
        unlinkdir.c
        utimens.c
        version-etc.c
        version-etc-fsf.c
        wctype-h.c
        xmalloc.c
        xalloc-die.c
        xgetcwd.c
        xsize.c
        xstrndup.c
        xstrtol.c
        xstrtoul.c
        xstrtoumax.c
        xvasprintf.c
        xasprintf.c
        acl_entries.c
        asnprintf.c
        at-func2.c
        canonicalize-lgpl.c
        chdir-long.c
        chown.c
        error.c
        euidaccess.c
        faccessat.c
        fchownat.c
        fnmatch.c
        fopen.c
        fpending.c
        free.c
        fstatat.c
        futimens.c
        getcwd.c
        getcwd-lgpl.c
        getgroups.c
        getopt.c
        getopt1.c
        getrandom.c
        group-member.c
        lchown.c
        link.c
        linkat.c
        lstat.c
        mempcpy.c
        memrchr.c
        mkfifo.c
        mkfifoat.c
        mknod.c
        mknodat.c
        mktime.c
        nl_langinfo.c
        obstack.c
        open.c
        openat.c
        printf-args.c
        printf-parse.c
        rawmemchr.c
        readlink.c
        readlinkat.c
        regex.c
        rename.c
        renameat.c
        setlocale-lock.c
        stat.c
        strchrnul.c
        strerror.c
        strerror-override.c
        symlink.c
        symlinkat.c
        time_rz.c
        timegm.c
        unlink.c
        unlinkat.c
        utime.c
        utimensat.c
        vasnprintf.c
        wcwidth.c
        wmempcpy.c
        )
#include_directories(${CMAKE_CURRENT_SOURCE_DIR}/minizip)
add_library(gnu STATIC ${SOURCE_GNU_LIB_FILES})
#add_executable(zlib-test-sample main.cpp zlib_helper.cc)
#
#target_link_libraries(zlib-test-sample mini-zip)


